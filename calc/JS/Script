    var calculator = (function() {

        var dump = "";

        var subjectScores = {
            ukr: 0,
			ukrlit: 0,
            his: 0,
            mat: 0,
            bio: 0,
            geo: 0,
            phy: 0,
            che: 0,
            lan: 0,
            con: 0,
            att: 0,
            fdp: 0
        };

        var opt = {
            man: false,
            fdp: false,
            vil: false
        };

        var olymp = {
            phy: 0,
            mat: 0,
            che: 0,
            bio: 0
        };

        var specialities = {};

        var init = function() {
            specialities = {
                "015,39": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "015,33": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
				"051": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "071": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "072": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "073": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "076": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "081": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.lan,
						subjectScores.his
                    ],
                    scores: [
                        0.35, 0.25, 0.4
                    ],
					limit: 140,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								);
                    }
                },
				"101": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.bio,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.his
                    ],
                    scores: [
                        0.3, 0.35, 0.35
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								);
                    }
				},
				"103": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "192": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
               "193": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "263": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.35, 0.4, 0.25
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "274": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                 "275": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
                        subjectScores.his,
                        subjectScores.che,
                        subjectScores.geo,
                        subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
                    limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function () {
                        maxscore = 0;
                        if (subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
                        if (subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
                        if (subjectScores.his > maxscore) { maxscore = subjectScores.his; }
                        if (subjectScores.che > maxscore) { maxscore = subjectScores.che; }
                        if (subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
                        if (subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
                        this.subjects.push(maxscore);
                    },
                    test: function () {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.lan >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.his >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.che >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.geo >= 100)
                                || (subjectScores.mat >= 100 && subjectScores.bio >= 100)
                            );
                    }
                },
                "281": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.4, 0.3
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
               
                "121": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1.00,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "122": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1.00,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "123": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1.00,
                    fdpScore: 0,
                    gal: false,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "131": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "133": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "136": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "141": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
                "144": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
				"151": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
				"184": {
                    subjects: [
                        subjectScores.ukr,
                        subjectScores.mat
                    ],
                    optionals: [
                        subjectScores.phy,
                        subjectScores.lan,
						subjectScores.his,
						subjectScores.che,
						subjectScores.geo,
						subjectScores.bio
                    ],
                    scores: [
                        0.3, 0.5, 0.2
                    ],
					limit: 125,
                    attScore: 0,
                    vilScore: 1,
                    fdpScore: 1,
                    gal: true,
                    olymp: false,
                    getOptional: function() {
						maxscore = 0;
						if(subjectScores.phy > maxscore) { maxscore = subjectScores.phy; }
						if(subjectScores.lan > maxscore) { maxscore = subjectScores.lan; }
						if(subjectScores.his > maxscore) { maxscore = subjectScores.his; }
						if(subjectScores.che > maxscore) { maxscore = subjectScores.che; }
						if(subjectScores.geo > maxscore) { maxscore = subjectScores.geo; }
						if(subjectScores.bio > maxscore) { maxscore = subjectScores.bio; }
						this.subjects.push(maxscore);            
                    },
                    test: function() {
                        return subjectScores.ukr >= 100
                            && ((subjectScores.mat >= 100 && subjectScores.phy >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.lan >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.his >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.che >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.geo >= 100)
								|| (subjectScores.mat >= 100 && subjectScores.bio >= 100)
								);
                    }
                },
            };
        };

        var calc = function() {
            Object.keys(specialities).forEach(function (item) {
                var result = 0;
                var galResult = "Галузевий коефіцієнт не застосовується";
                var rk = 1.04;
                var subjectScore = 0;
                var attScore = 0;
                var fdpScore = 0;
                var olympScore = 0;
                var vilScore = 1;
                specialities[item].getOptional();
                for (var i = 0; i < specialities[item].subjects.length; i++) {
                    var score = specialities[item].subjects[i];
                    if (specialities[item].olymp) {
                        if (olymp.mat > 0 && specialities[item].subjects[i] == subjectScores.mat) {
                            score += olymp.mat;
                        }
                        if (olymp.phy > 0 && specialities[item].subjects[i] == subjectScores.phy) {
                            score += olymp.phy;
                        }
                        if (olymp.che > 0 && specialities[item].subjects[i] == subjectScores.che) {
                            score += olymp.che;
                        }
                        if (olymp.bio > 0 && specialities[item].subjects[i] == subjectScores.bio) {
                            score += olymp.bio;
                        }
                    }
                    subjectScore += score * specialities[item].scores[i];
                }
                if (opt.fdp) {
                    fdpScore = subjectScores.fdp * specialities[item].fdpScore;
                }
                if (opt.man) {
                    olympScore += 10;
                }
                if (opt.vil) {
                    vilScore = specialities[item].vilScore;
                }
                attScore = subjectScores.att * specialities[item].attScore;
                result = subjectScore * rk + fdpScore;

                if (specialities[item].gal) {
                    galResult = result * 1.02;
                }

				if (galResult > 200) {
					galResult = 200;
				}
				if (result > 200) {
					result = 200;
				}
       
				if(!specialities[item].test()) {
					setCookie("spec" + item, typeof result == "string" ? result : result.toFixed(3), 99);
					setCookie("specGal" + item, typeof galResult == "string" ? galResult : galResult.toFixed(3), 99);
				  
					document.getElementById("score-" + item).classList.remove("score-positive");
					document.getElementById("score-gal-" + item).classList.remove("score-positive");
					document.getElementById("score-" + item).classList.remove("score-negative");
					document.getElementById("score-gal-" + item).classList.remove("score-negative");  
					document.getElementById("score-" + item).innerText     = '';
					document.getElementById("score-gal-" + item).innerText   = '';            
				} else {
					setCookie("spec" + item, result.toFixed(3), 99);
					setCookie("specGal" + item, galResult, 99);
				
					if ((galResult <125 && parseFloat(galResult)!='NaN') 
						|| (parseFloat(galResult) =='NaN' && result <125) 
						|| (galResult =="Галузевий коефіцієнт не застосовується" && result <125))
						 {

						strresult = "Недостатньо балів";
						document.getElementById("score-" + item).innerText = (typeof result == "string" ? result : result.toFixed(3)) +" - "+strresult;
						document.getElementById("score-gal-" + item).innerText = (typeof galResult == "string" ? galResult : galResult.toFixed(3)) +" - "+strresult;
						document.getElementById("score-" + item).classList.remove("score-positive");
						document.getElementById("score-gal-" + item).classList.remove("score-positive");
						document.getElementById("score-" + item).classList.add("score-negative");
						document.getElementById("score-gal-" + item).classList.add("score-negative");
					
					} else {
						if(parseFloat(result)!='NaN')   result = result.toFixed(3);
						if(parseFloat(galResult)!='NaN' && galResult !="Галузевий коефіцієнт не застосовується") galResult = galResult.toFixed(3);
						
						document.getElementById("score-" + item).innerText     		= typeof result == "string" ? result : result.toFixed(3);
						document.getElementById("score-gal-" + item).innerText   	= typeof galResult == "string" ? galResult : galResult.toFixed(3);
						document.getElementById("score-" + item).classList.remove("score-negative");
						document.getElementById("score-gal-" + item).classList.remove("score-negative");          
						document.getElementById("score-" + item).classList.add("score-positive");
						document.getElementById("score-gal-" + item).classList.add("score-positive");
					}

					if (((item == "081" || item == "281") && result <140)
						|| result < 125) { 
						strresult = "Недостатньо балів";
						document.getElementById("score-" + item).innerText = (typeof result == "string" ? result : result.toFixed(3)) +" - "+strresult;
						document.getElementById("score-" + item).classList.remove("score-positive");
						document.getElementById("score-" + item).classList.add("score-negative");
					}
                }

            });
        };

        var collect = function() {
            subjectScores.ukr = document.getElementById("ukr").value ? Number(document.getElementById("ukr").value) : 0;
            subjectScores.his = document.getElementById("his").value ? Number(document.getElementById("his").value) : 0;
            subjectScores.mat = document.getElementById("mat").value ? Number(document.getElementById("mat").value) : 0;
            subjectScores.fdp = document.getElementById("fdp").value ? Number(document.getElementById("fdp").value) : 0;
            opt.fdp = !!subjectScores.fdp;
            
            
            init();
            calc();
        };

        var runChecks = function() {
            var errorMsg = "";
            var errorFields = false;
            document.getElementById("znoScoreForm").querySelectorAll("input.zno-input").forEach(function(element) {
                if (element.value && element.value >= 100 && element.value <= 200) {
                    element.style.backgroundColor = "#cce0da";
                } else {
                    if (element.value) {
                        errorFields = true;
                        element.style.backgroundColor = "#a94442";
                    } else {
                        element.style.backgroundColor = "#ffffff";
                    }
                }
            });
			var fdpElement = document.getElementById("fdp");
            if (fdpElement.value && fdpElement.value >= 0 && fdpElement.value <= 10) {
                fdpElement.style.backgroundColor = "#cce0da";
            } else {
                if (fdpElement.value) {
                    errorFields = true;
                    fdpElement.style.backgroundColor = "#a94442";
                } else {
                    fdpElement.style.backgroundColor = "#ffffff";
                }
            }
            if (errorFields) {
                errorMsg += "- У одному чи кількох полях наведено неприпустимі значення. Перевірте поля, які помічено червоним кольором. Зверніть увагу, для вказання дробових значень балів потрібно використовувати крапку (.), а не кому (,) для відділення дробової частини від цілої.<br>"
            }
            if (errorMsg !== "") {
                document.querySelectorAll(".zno-error")[0].style.display = "block";
                document.querySelectorAll(".zno-error-body")[0].innerHTML = errorMsg;
                return false;
            }
            return true;
        };

        var moveGrades = function(mark) {
            var keyMark = Number(mark).toFixed(1).toString();
            var marksTable = {
                "1.0": 100,
                "1.1": 100,
                "1.2": 100,
                "1.3": 100,
                "1.4": 100,
                "1.5": 100,
                "1.6": 100,
                "1.7": 100,
                "1.8": 100,
                "1.9": 100,
                "2.0": 100,
                "2.1": 101,
                "2.2": 102,
                "2.3": 103,
                "2.4": 104,
                "2.5": 105,
                "2.6": 106,
                "2.7": 107,
                "2.8": 108,
                "2.9": 109,
                "3.0": 110,
                "3.1": 111,
                "3.2": 112,
                "3.3": 113,
                "3.4": 114,
                "3.5": 115,
                "3.6": 116,
                "3.7": 117,
                "3.8": 118,
                "3.9": 119,
                "4.0": 120,
                "4.1": 121,
                "4.2": 122,
                "4.3": 123,
                "4.4": 124,
                "4.5": 125,
                "4.6": 126,
                "4.7": 127,
                "4.8": 128,
                "4.9": 129,
                "5.0": 130,
                "5.1": 131,
                "5.2": 132,
                "5.3": 133,
                "5.4": 134,
                "5.5": 135,
                "5.6": 136,
                "5.7": 137,
                "5.8": 138,
                "5.9": 139,
                "6.0": 140,
                "6.1": 141,
                "6.2": 142,
                "6.3": 143,
                "6.4": 144,
                "6.5": 145,
                "6.6": 146,
                "6.7": 147,
                "6.8": 148,
                "6.9": 149,
                "7.0": 150,
                "7.1": 151,
                "7.2": 152,
                "7.3": 153,
                "7.4": 154,
                "7.5": 155,
                "7.6": 156,
                "7.7": 157,
                "7.8": 158,
                "7.9": 159,
                "8.0": 160,
                "8.1": 161,
                "8.2": 162,
                "8.3": 163,
                "8.4": 164,
                "8.5": 165,
                "8.6": 166,
                "8.7": 167,
                "8.8": 168,
                "8.9": 169,
                "9.0": 170,
                "9.1": 171,
                "9.2": 172,
                "9.3": 173,
                "9.4": 174,
                "9.5": 175,
                "9.6": 176,
                "9.7": 177,
                "9.8": 178,
                "9.9": 179,
                "10.0": 180,
                "10.1": 181,
                "10.2": 182,
                "10.3": 183,
                "10.4": 184,
                "10.5": 185,
                "10.6": 186,
                "10.7": 187,
                "10.8": 188,
                "10.9": 189,
                "11.0": 190,
                "11.1": 191,
                "11.2": 192,
                "11.3": 193,
                "11.4": 194,
                "11.5": 195,
                "11.6": 196,
                "11.7": 197,
                "11.8": 198,
                "11.9": 199,
                "12.0": 200
            };
            if (keyMark.toString() in marksTable) {
                return marksTable[keyMark];
            }
            return 0;
        };

        return {
            dump: dump,
            collect: collect,
            calc: calc,
            runChecks: runChecks
        };

    })();

    function setCookie(name,value,days) {
        var expires = "";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days*24*60*60*1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "")  + expires + "; path=/";
    }
    function getCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for(var i=0;i < ca.length;i++) {
            var c = ca[i];
            while (c.charAt(0)==' ') c = c.substring(1,c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
        }
        return null;
    }
    function eraseCookie(name) {
        document.cookie = name+'=; Max-Age=-99999999;';
    }

    document.getElementById("znoScoreForm").querySelectorAll("input.zno-input").onchange = function() {
        this.value = this.value.match(/\d*\.?\d+/);
    };

    document.getElementById("znoScoreForm").addEventListener("submit", function(e) {
        e.preventDefault();
        if (calculator.runChecks()) {
            document.querySelectorAll(".zno-error")[0].style.display = "none";
            calculator.collect();
        }
    });

    document.getElementById("specialitiesSearch").addEventListener("keyup", function(e) {
        e.preventDefault();
        var value = this.value.trim().toLowerCase();
        if (value === "") {
            document.querySelectorAll(".zno-specialities-item").forEach(function (element) {
                element.style.display = "block";
            })
        } else {
            document.querySelectorAll(".zno-specialities-item").forEach(function(element) {
                var elementId = element.dataset.number;
                var numberText = document.getElementById("number-" + elementId).innerText.toLowerCase();
                var nameText = document.getElementById("name-" + elementId).innerText.toLowerCase();
                if (numberText.indexOf(value) !== -1 || nameText.indexOf(value) !== -1) {
                    document.getElementById("item-" + elementId).style.display = "block";
                } else {
                    document.getElementById("item-" + elementId).style.display = "none";
                }
            });
        }
    });